{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    },
    "variables": {
        "UniqueSuffix":"[uniqueString(resourceGroup().id)]",
        "connections_eventhubs_name":  "eventhubs",
        "workflows_CryptoLogicApp_name": "CryptoLogicApp",
        "namespaces_cryptoEventHubs_1_name":"[concat('cryptoEventHubs-', substring(variables('UniqueSuffix'),0,5))]",
        "storageAccounts_cryptodatalake_name": "[concat('cryptodatalake-', substring(variables('UniqueSuffix'),0,5))]",
        "streamingjobs_CryptoStreamAnalytics_name":"[concat('CryptoStreamAnalytics-',substring(variables('UniqueSuffix'),0,5))]",
	"ADPEventHubAuthPolicyID": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('ADPEventHubsName'), 'RootManageSharedAccessKey')]",
	"ADPEventHubsAPIVersion": "[providers('Microsoft.Eventhub','namespaces').apiVersions[0]]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2022-01-01-preview",
            "name": "[variables('namespaces_cryptoEventHubs_1_name')]",
            "location": "Australia Southeast",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false,
                "zoneRedundant": false,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[variables('storageAccounts_cryptodatalake_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "apiVersion": "2021-10-01-preview",
            "name": "[variables('streamingjobs_CryptoStreamAnalytics_name')]",
            "location": "Central US",
            "sku": {
                "name": "Standard",
                "capacity": 3
            },
            "properties": {
                "sku": {
                    "name": "Standard"
                },
                "eventsOutOfOrderPolicy": "Adjust",
                "outputErrorPolicy": "Stop",
                "eventsOutOfOrderMaxDelayInSeconds": 0,
                "eventsLateArrivalMaxDelayInSeconds": 5,
                "dataLocale": "en-US",
                "compatibilityLevel": "1.2",
                "contentStoragePolicy": "SystemAccount",
                "jobType": "Cloud"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('connections_eventhubs_name')]",
            "location": "centralus",
            "kind": "V1",
            "properties": {
                "displayName": "EventHubAPIConnection",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId ,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/eventhubs')]"
                },
				"parameterValues":{
					"connectionString": "[listkeys(variables('ADPEventHubAuthPolicyID'), '2017-04-01').primaryConnectionString]"
				},
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('namespaces_cryptoEventHubs_1_name'), '/RootManageSharedAccessKey')]",
            "location": "Australia Southeast",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_cryptoEventHubs_1_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('namespaces_cryptoEventHubs_1_name'), '/default')]",
            "location": "Australia Southeast",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_cryptoEventHubs_1_name'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[variables('workflows_CryptoLogicApp_name')]",
            "location": "centralus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('connections_eventhubs_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "HTTP": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 2
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Second",
                                "interval": 2
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "limit": "1000",
                                    "symbol": "BTCUSDT"
                                },
                                "method": "GET",
                                "uri": "https://api.binance.com/api/v3/trades"
                            }
                        }
                    },
                    "actions": {
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "isBestMatch": {
                                                "type": "boolean"
                                            },
                                            "isBuyerMaker": {
                                                "type": "boolean"
                                            },
                                            "price": {
                                                "type": "string"
                                            },
                                            "qty": {
                                                "type": "string"
                                            },
                                            "quoteQty": {
                                                "type": "string"
                                            },
                                            "symbol": {
                                                "default": "BTC/USDT",
                                                "type": "string"
                                            },
                                            "time": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "price",
                                            "qty",
                                            "quoteQty",
                                            "time",
                                            "isBuyerMaker",
                                            "isBestMatch"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Send_event": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(body('Parse_JSON'))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@variables('$connections')['eventhubs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/@{encodeURIComponent('cryptotrade')}/events"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventhubs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_eventhubs_name'))]",
                                "connectionName": "eventhubs",
                                "id": "/subscriptions/5054f72b-16ed-4894-8bf5-fe7ad8fa20e3/providers/Microsoft.Web/locations/centralus/managedApis/eventhubs"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccounts_cryptodatalake_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_cryptodatalake_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccounts_cryptodatalake_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_cryptodatalake_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccounts_cryptodatalake_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_cryptodatalake_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccounts_cryptodatalake_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_cryptodatalake_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('namespaces_cryptoEventHubs_1_name'), '/cryptotrade')]",
            "location": "Australia Southeast",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_cryptoEventHubs_1_name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_cryptodatalake_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 1,
                "status": "Active",
                "captureDescription": {
                    "enabled": true,
                    "encoding": "Avro",
                    "destination": {
                        "name": "EventHubArchive.AzureBlockBlob",
                        "properties": {
                            "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_cryptodatalake_name'))]",
                            "blobContainer": "cryptotrades",
                            "archiveNameFormat": "{Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}"
                        }
                    },
                    "intervalInSeconds": 60,
                    "sizeLimitInBytes": 314572800
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(variables('namespaces_cryptoEventHubs_1_name'), '/cryptotrade/$Default')]",
            "location": "Australia Southeast",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_cryptoEventHubs_1_name'), 'cryptotrade')]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_cryptoEventHubs_1_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(variables('storageAccounts_cryptodatalake_name'), '/default/cryptotrades')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccounts_cryptodatalake_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccounts_cryptodatalake_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}
